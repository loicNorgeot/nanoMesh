cmake_minimum_required(VERSION 3.5)
project(nanoMesh)

# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)

# Add the configurations from nanogui
add_subdirectory(ext/nanogui)

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS} -std=c++11 -g)


include_directories(src/ src/lib/)
include_directories(${NANOGUI_EXTRA_INCS})

#files
file(GLOB LIBRARY_HEADERS src/lib/*.h)
file(GLOB LIBRARY_SOURCES src/lib/*.cpp)

#Create the library
add_library(lib${PROJECT_NAME} SHARED ${LIBRARY_HEADERS} ${LIBRARY_SOURCES})
target_link_libraries(lib${PROJECT_NAME} nanogui ${NANOGUI_EXTRA_LIBS})
set_target_properties(lib${PROJECT_NAME} PROPERTIES PREFIX "")

# On top of adding the path to nanogui/include, you may need extras
add_executable(${PROJECT_NAME} src/main.cpp)
target_link_libraries(${PROJECT_NAME} lib${PROJECT_NAME})


#add_definitions(-DSHADERS_PATH="${PROJECT_SOURCE_DIR}/src/lib/shaders")
